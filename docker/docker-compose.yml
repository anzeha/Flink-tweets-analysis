version: "2"
services:
    zookeeper:
        container_name: zookeeper1
        image: confluentinc/cp-zookeeper:6.1.0
        hostname: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        volumes:
            - ../kafka/kafka_data/zk-data/data:/var/lib/zookeeper/data
            - ../kafka/kafka_data/zk-txn-logs/log:/var/lib/zookeeper/log

    broker:
        container_name: broker1
        image: confluentinc/cp-server:6.1.0
        hostname: broker1
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "9101:9101"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 9101
            KAFKA_JMX_HOSTNAME: localhost
            KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1:29092
            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_ENABLE: "true"
            CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
        volumes:
            - ../kafka/kafka_data/kafka-data/data:/var/lib/kafka/data

    schema-registry:
        container_name: schema-registry1
        image: confluentinc/cp-schema-registry:6.1.0
        hostname: schema-registry
        depends_on:
            - broker
        ports:
            - "8081:8081"
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker1:29092"
            SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

    control-center:
        container_name: control-center1
        image: confluentinc/cp-enterprise-control-center:6.1.0
        hostname: control-center
        depends_on:
            - broker
            - schema-registry
        ports:
            - "9021:9021"
        environment:
            CONTROL_CENTER_BOOTSTRAP_SERVERS: "broker1:29092"
            CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
            CONTROL_CENTER_REPLICATION_FACTOR: 1
            CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
            CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
            CONFLUENT_METRICS_TOPIC_REPLICATION: 1
            PORT: 9021

    nifi:
        image: apache/nifi:latest
        container_name: nifi1
        restart: unless-stopped
        #network_mode: bridge
        ports:
            # HTTP
            - 8080:8080/tcp
            # HTTPS
            - 8443:8443/tcp
            # Remote Input Socket
            - 10000:10000/tcp
            # JVM Debugger
            - 8000:8000/tcp
            # Cluster Node Protocol
            #- 11443:11443/tcp
        volumes:
            - ../nifi/dup_nifi_data:/home/nifi
        environment:
            # nifi.web.http.host
            NIFI_WEB_HTTP_HOST: "0.0.0.0"
            NIFI_HOME: /home/nifi
            NIFI_LOG_DIR: /home/nifi/logs
            # nifi.web.http.port
            #   HTTP Port
            NIFI_WEB_HTTP_PORT: 8080

    node01:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
        container_name: node01_1
        environment:
            node.name: node01
            cluster.name: es-cluster-7
            discovery.type: single-node
            ES_JAVA_OPTS: -Xms512m -Xmx512m
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - ../elasticsearch/elasticsearchrestore_data:/usr/share/elasticsearch/data
        ports:
            - 9200:9200
        networks:
            - es-network

    kibana:
        container_name: kibana
        image: docker.elastic.co/kibana/kibana:7.12.0
        environment:
            ELASTICSEARCH_URL: http://node01:9200
            ELASTICSEARCH_HOSTS: http://node01:9200
        ports:
            - 5601:5601
        networks:
            - es-network
        depends_on:
            - node01

networks:
    es-network:
        driver: bridge
